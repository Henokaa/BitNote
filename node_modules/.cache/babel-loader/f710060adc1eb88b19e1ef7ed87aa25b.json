{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar onExit = require('signal-exit');\n\nvar currentlyUnhandled = require('currently-unhandled');\n\nvar installed = false;\n\nmodule.exports = function (log) {\n  if (installed) {\n    return;\n  }\n\n  installed = true;\n  log = log || console.error;\n  var listUnhandled = currentlyUnhandled();\n  onExit(function () {\n    var unhandledRejections = listUnhandled();\n\n    if (unhandledRejections.length > 0) {\n      unhandledRejections.forEach(function (x) {\n        var err = x.reason;\n\n        if (!(err instanceof Error)) {\n          err = new Error('Promise rejected with value: ' + util.inspect(err));\n        }\n\n        log(err.stack);\n      });\n      process.exitCode = 1;\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/b/Downloads/Compressed/BitNote-main/node_modules/loud-rejection/index.js"],"names":["util","require","onExit","currentlyUnhandled","installed","module","exports","log","console","error","listUnhandled","unhandledRejections","length","forEach","x","err","reason","Error","inspect","stack","process","exitCode"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,qBAAD,CAAhC;;AAEA,IAAIG,SAAS,GAAG,KAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC/B,MAAIH,SAAJ,EAAe;AACd;AACA;;AAEDA,EAAAA,SAAS,GAAG,IAAZ;AAEAG,EAAAA,GAAG,GAAGA,GAAG,IAAIC,OAAO,CAACC,KAArB;AAEA,MAAIC,aAAa,GAAGP,kBAAkB,EAAtC;AAEAD,EAAAA,MAAM,CAAC,YAAY;AAClB,QAAIS,mBAAmB,GAAGD,aAAa,EAAvC;;AAEA,QAAIC,mBAAmB,CAACC,MAApB,GAA6B,CAAjC,EAAoC;AACnCD,MAAAA,mBAAmB,CAACE,OAApB,CAA4B,UAAUC,CAAV,EAAa;AACxC,YAAIC,GAAG,GAAGD,CAAC,CAACE,MAAZ;;AAEA,YAAI,EAAED,GAAG,YAAYE,KAAjB,CAAJ,EAA6B;AAC5BF,UAAAA,GAAG,GAAG,IAAIE,KAAJ,CAAU,kCAAkCjB,IAAI,CAACkB,OAAL,CAAaH,GAAb,CAA5C,CAAN;AACA;;AAEDR,QAAAA,GAAG,CAACQ,GAAG,CAACI,KAAL,CAAH;AACA,OARD;AAUAC,MAAAA,OAAO,CAACC,QAAR,GAAmB,CAAnB;AACA;AACD,GAhBK,CAAN;AAiBA,CA5BD","sourcesContent":["'use strict';\nvar util = require('util');\nvar onExit = require('signal-exit');\nvar currentlyUnhandled = require('currently-unhandled');\n\nvar installed = false;\n\nmodule.exports = function (log) {\n\tif (installed) {\n\t\treturn;\n\t}\n\n\tinstalled = true;\n\n\tlog = log || console.error;\n\n\tvar listUnhandled = currentlyUnhandled();\n\n\tonExit(function () {\n\t\tvar unhandledRejections = listUnhandled();\n\n\t\tif (unhandledRejections.length > 0) {\n\t\t\tunhandledRejections.forEach(function (x) {\n\t\t\t\tvar err = x.reason;\n\n\t\t\t\tif (!(err instanceof Error)) {\n\t\t\t\t\terr = new Error('Promise rejected with value: ' + util.inspect(err));\n\t\t\t\t}\n\n\t\t\t\tlog(err.stack);\n\t\t\t});\n\n\t\t\tprocess.exitCode = 1;\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}