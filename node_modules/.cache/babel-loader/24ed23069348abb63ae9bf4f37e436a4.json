{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSubtitles = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nlet getSubtitles = exports.getSubtitles = (() => {\n  var _ref = _asyncToGenerator(function* ({\n    videoID,\n    lang = 'en'\n  }) {\n    var _ref2 = yield _axios2.default.get(`https://youtube.com/get_video_info?video_id=${videoID}`);\n\n    const data = _ref2.data;\n    const decodedData = decodeURIComponent(data); // * ensure we have access to captions data\n\n    if (!decodedData.includes('captionTracks')) throw new Error(`Could not find captions for video: ${videoID}`);\n    const regex = /({\"captionTracks\":.*isTranslatable\":(true|false)}])/;\n\n    var _regex$exec = regex.exec(decodedData),\n        _regex$exec2 = _slicedToArray(_regex$exec, 1);\n\n    const match = _regex$exec2[0];\n\n    var _JSON$parse = JSON.parse(`${match}}`);\n\n    const captionTracks = _JSON$parse.captionTracks;\n    const subtitle = (0, _lodash.find)(captionTracks, {\n      vssId: `.${lang}`\n    }) || (0, _lodash.find)(captionTracks, {\n      vssId: `a.${lang}`\n    }) || (0, _lodash.find)(captionTracks, function ({\n      vssId\n    }) {\n      return vssId && vssId.match(`.${lang}`);\n    }); // * ensure we have found the correct subtitle lang\n\n    if (!subtitle || subtitle && !subtitle.baseUrl) throw new Error(`Could not find ${lang} captions for ${videoID}`);\n\n    var _ref3 = yield _axios2.default.get(subtitle.baseUrl);\n\n    const transcript = _ref3.data;\n    const lines = transcript.replace('<?xml version=\"1.0\" encoding=\"utf-8\" ?><transcript>', '').replace('</transcript>', '').split('</text>').filter(function (line) {\n      return line && line.trim();\n    }).map(function (line) {\n      const startRegex = /start=\"([\\d.]+)\"/;\n      const durRegex = /dur=\"([\\d.]+)\"/;\n\n      var _startRegex$exec = startRegex.exec(line),\n          _startRegex$exec2 = _slicedToArray(_startRegex$exec, 2);\n\n      const start = _startRegex$exec2[1];\n\n      var _durRegex$exec = durRegex.exec(line),\n          _durRegex$exec2 = _slicedToArray(_durRegex$exec, 2);\n\n      const dur = _durRegex$exec2[1];\n      const htmlText = line.replace(/<text.+>/, '').replace(/&amp;/gi, '&').replace(/<\\/?[^>]+(>|$)/g, '');\n\n      const decodedText = _he2.default.decode(htmlText);\n\n      const text = (0, _striptags2.default)(decodedText);\n      return {\n        start,\n        dur,\n        text\n      };\n    });\n    return lines;\n  });\n\n  return function getSubtitles(_x) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nvar _he = require('he');\n\nvar _he2 = _interopRequireDefault(_he);\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _lodash = require('lodash');\n\nvar _striptags = require('striptags');\n\nvar _striptags2 = _interopRequireDefault(_striptags);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/Henok/Desktop/3D/Front end mmasters/firebase with react V2/BitNote/BitNote/BitNote/node_modules/youtube-captions-scraper/dist/index.js"],"names":["Object","defineProperty","exports","value","getSubtitles","undefined","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_ref","_asyncToGenerator","videoID","lang","_ref2","_axios2","default","get","data","decodedData","decodeURIComponent","includes","Error","regex","_regex$exec","exec","_regex$exec2","match","_JSON$parse","JSON","parse","captionTracks","subtitle","_lodash","find","vssId","baseUrl","_ref3","transcript","lines","replace","split","filter","line","trim","map","startRegex","durRegex","_startRegex$exec","_startRegex$exec2","start","_durRegex$exec","_durRegex$exec2","dur","htmlText","decodedText","_he2","decode","text","_striptags2","_x","apply","arguments","_he","require","_interopRequireDefault","_axios","_striptags","obj","__esModule","fn","gen","Promise","resolve","reject","step","key","arg","info","error","then"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSubtitles = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nlet getSubtitles = exports.getSubtitles = (() => {\n  var _ref = _asyncToGenerator(function* ({\n    videoID,\n    lang = 'en'\n  }) {\n    var _ref2 = yield _axios2.default.get(`https://youtube.com/get_video_info?video_id=${videoID}`);\n\n    const data = _ref2.data;\n\n\n    const decodedData = decodeURIComponent(data);\n\n    // * ensure we have access to captions data\n    if (!decodedData.includes('captionTracks')) throw new Error(`Could not find captions for video: ${videoID}`);\n\n    const regex = /({\"captionTracks\":.*isTranslatable\":(true|false)}])/;\n\n    var _regex$exec = regex.exec(decodedData),\n        _regex$exec2 = _slicedToArray(_regex$exec, 1);\n\n    const match = _regex$exec2[0];\n\n    var _JSON$parse = JSON.parse(`${match}}`);\n\n    const captionTracks = _JSON$parse.captionTracks;\n\n\n    const subtitle = (0, _lodash.find)(captionTracks, {\n      vssId: `.${lang}`\n    }) || (0, _lodash.find)(captionTracks, {\n      vssId: `a.${lang}`\n    }) || (0, _lodash.find)(captionTracks, function ({ vssId }) {\n      return vssId && vssId.match(`.${lang}`);\n    });\n\n    // * ensure we have found the correct subtitle lang\n    if (!subtitle || subtitle && !subtitle.baseUrl) throw new Error(`Could not find ${lang} captions for ${videoID}`);\n\n    var _ref3 = yield _axios2.default.get(subtitle.baseUrl);\n\n    const transcript = _ref3.data;\n\n    const lines = transcript.replace('<?xml version=\"1.0\" encoding=\"utf-8\" ?><transcript>', '').replace('</transcript>', '').split('</text>').filter(function (line) {\n      return line && line.trim();\n    }).map(function (line) {\n      const startRegex = /start=\"([\\d.]+)\"/;\n      const durRegex = /dur=\"([\\d.]+)\"/;\n\n      var _startRegex$exec = startRegex.exec(line),\n          _startRegex$exec2 = _slicedToArray(_startRegex$exec, 2);\n\n      const start = _startRegex$exec2[1];\n\n      var _durRegex$exec = durRegex.exec(line),\n          _durRegex$exec2 = _slicedToArray(_durRegex$exec, 2);\n\n      const dur = _durRegex$exec2[1];\n\n\n      const htmlText = line.replace(/<text.+>/, '').replace(/&amp;/gi, '&').replace(/<\\/?[^>]+(>|$)/g, '');\n\n      const decodedText = _he2.default.decode(htmlText);\n      const text = (0, _striptags2.default)(decodedText);\n\n      return {\n        start,\n        dur,\n        text\n      };\n    });\n\n    return lines;\n  });\n\n  return function getSubtitles(_x) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nvar _he = require('he');\n\nvar _he2 = _interopRequireDefault(_he);\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _lodash = require('lodash');\n\nvar _striptags = require('striptags');\n\nvar _striptags2 = _interopRequireDefault(_striptags);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }"]},"metadata":{},"sourceType":"script"}