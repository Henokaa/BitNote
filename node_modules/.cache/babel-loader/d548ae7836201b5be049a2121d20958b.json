{"ast":null,"code":"'use strict';\n\nvar arrayFindIndex = require('array-find-index');\n\nmodule.exports = function () {\n  var unhandledRejections = [];\n\n  function onUnhandledRejection(reason, promise) {\n    unhandledRejections.push({\n      reason: reason,\n      promise: promise\n    });\n  }\n\n  function onRejectionHandled(promise) {\n    var index = arrayFindIndex(unhandledRejections, function (x) {\n      return x.promise === promise;\n    });\n    unhandledRejections.splice(index, 1);\n  }\n\n  function currentlyUnhandled() {\n    return unhandledRejections.map(function (entry) {\n      return {\n        reason: entry.reason,\n        promise: entry.promise\n      };\n    });\n  }\n\n  return {\n    onUnhandledRejection: onUnhandledRejection,\n    onRejectionHandled: onRejectionHandled,\n    currentlyUnhandled: currentlyUnhandled\n  };\n};","map":{"version":3,"sources":["C:/Users/henok/Documents/GitHub/BitNote/node_modules/currently-unhandled/core.js"],"names":["arrayFindIndex","require","module","exports","unhandledRejections","onUnhandledRejection","reason","promise","push","onRejectionHandled","index","x","splice","currentlyUnhandled","map","entry"],"mappings":"AAAA;;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC5B,MAAIC,mBAAmB,GAAG,EAA1B;;AAEA,WAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,OAAtC,EAA+C;AAC9CH,IAAAA,mBAAmB,CAACI,IAApB,CAAyB;AAACF,MAAAA,MAAM,EAAEA,MAAT;AAAiBC,MAAAA,OAAO,EAAEA;AAA1B,KAAzB;AACA;;AAED,WAASE,kBAAT,CAA4BF,OAA5B,EAAqC;AACpC,QAAIG,KAAK,GAAGV,cAAc,CAACI,mBAAD,EAAsB,UAAUO,CAAV,EAAa;AAC5D,aAAOA,CAAC,CAACJ,OAAF,KAAcA,OAArB;AACA,KAFyB,CAA1B;AAIAH,IAAAA,mBAAmB,CAACQ,MAApB,CAA2BF,KAA3B,EAAkC,CAAlC;AACA;;AAED,WAASG,kBAAT,GAA8B;AAC7B,WAAOT,mBAAmB,CAACU,GAApB,CAAwB,UAAUC,KAAV,EAAiB;AAC/C,aAAO;AACNT,QAAAA,MAAM,EAAES,KAAK,CAACT,MADR;AAENC,QAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFT,OAAP;AAIA,KALM,CAAP;AAMA;;AAED,SAAO;AACNF,IAAAA,oBAAoB,EAAEA,oBADhB;AAENI,IAAAA,kBAAkB,EAAEA,kBAFd;AAGNI,IAAAA,kBAAkB,EAAEA;AAHd,GAAP;AAKA,CA7BD","sourcesContent":["'use strict';\r\nvar arrayFindIndex = require('array-find-index');\r\n\r\nmodule.exports = function () {\r\n\tvar unhandledRejections = [];\r\n\r\n\tfunction onUnhandledRejection(reason, promise) {\r\n\t\tunhandledRejections.push({reason: reason, promise: promise});\r\n\t}\r\n\r\n\tfunction onRejectionHandled(promise) {\r\n\t\tvar index = arrayFindIndex(unhandledRejections, function (x) {\r\n\t\t\treturn x.promise === promise;\r\n\t\t});\r\n\r\n\t\tunhandledRejections.splice(index, 1);\r\n\t}\r\n\r\n\tfunction currentlyUnhandled() {\r\n\t\treturn unhandledRejections.map(function (entry) {\r\n\t\t\treturn {\r\n\t\t\t\treason: entry.reason,\r\n\t\t\t\tpromise: entry.promise\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tonUnhandledRejection: onUnhandledRejection,\r\n\t\tonRejectionHandled: onRejectionHandled,\r\n\t\tcurrentlyUnhandled: currentlyUnhandled\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"script"}