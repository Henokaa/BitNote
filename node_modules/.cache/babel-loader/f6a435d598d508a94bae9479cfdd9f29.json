{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Henok\\\\Desktop\\\\2nd yr 2sem\\\\My website\\\\myapp\\\\src\\\\component\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n/*#__PURE__*/\n_jsxDEV(\"script\", {\n  src: \"https://www.gstatic.com/firebasejs/8.1.1/firebase-app.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 1\n}, this);\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCDkndZZhEEvQuELnFO3iBh8X6sQdbYH7o\",\n  authDomain: \"secproject-3e622.firebaseapp.com\",\n  databaseURL: \"https://secproject-3e622.firebaseio.com\",\n  projectId: \"secproject-3e622\",\n  storageBucket: \"secproject-3e622.appspot.com\",\n  messagingSenderId: \"575554634707\",\n  appId: \"1:575554634707:web:4256d80e8b7beeb468a526\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconsole.log(\"hey\");\nconst projectstorage = firebase.storage();\nconst projectfirebase = firebase.firestore();\n\nconst Notes = () => {\n  _s();\n\n  const [title, updatetitle] = useState(\"\");\n  const [note, updatenote] = useState(\"\"); // var ref = projectstorage.ref('notedata');\n\n  function createNote(e) {\n    e.preventDefault();\n    if (title !== \"\" && note !== \"\") projectstorage.ref('notedata').post({\n      title: title,\n      note: note\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"noteform\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteform-title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"noteform-title\",\n        name: \"noteform-title\",\n        value: title,\n        placeholder: \"Title\",\n        onChange: e => updatetitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteform-note\",\n        children: \"Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"noteform-note\",\n        id: \"noteform-note\",\n        value: note,\n        placeholder: \"Note\",\n        onChange: b => updatenote(b.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createNote(e),\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"a1AXSvPnvc8htMvR0DuxIODASDc=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Henok/Desktop/2nd yr 2sem/My website/myapp/src/component/Notes.js"],"names":["React","useState","useEffect","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","console","log","projectstorage","storage","projectfirebase","firestore","Notes","title","updatetitle","note","updatenote","createNote","e","preventDefault","ref","post","target","value","b"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;;AAEA;AAAA;AAAQ,EAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;;AACK,IAAIC,cAAc,GAAG;AAClBC,EAAAA,MAAM,EAAE,yCADU;AAElBC,EAAAA,UAAU,EAAE,kCAFM;AAGlBC,EAAAA,WAAW,EAAE,yCAHK;AAIlBC,EAAAA,SAAS,EAAE,kBAJO;AAKlBC,EAAAA,aAAa,EAAE,8BALG;AAMlBC,EAAAA,iBAAiB,EAAE,cAND;AAOlBC,EAAAA,KAAK,EAAE;AAPW,CAArB,C,CASC;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AACFS,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,MAAMC,cAAc,GAAGZ,QAAQ,CAACa,OAAT,EAAvB;AACA,MAAMC,eAAe,GAAGd,QAAQ,CAACe,SAAT,EAAxB;;AAEJ,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBpB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACqB,IAAD,EAAOC,UAAP,IAAqBtB,QAAQ,CAAC,EAAD,CAAnC,CAFkB,CAInB;;AACC,WAASuB,UAAT,CAAoBC,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIN,KAAK,KAAK,EAAV,IAAgBE,IAAI,KAAK,EAA7B,EACAP,cAAc,CAACY,GAAf,CAAmB,UAAnB,EAA+BC,IAA/B,CAAoC;AAChCR,MAAAA,KAAK,EAAEA,KADyB;AAEhCE,MAAAA,IAAI,EAAEA;AAF0B,KAApC;AAID;;AACA,sBACC;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,gBAFL;AAGE,QAAA,IAAI,EAAC,gBAHP;AAIE,QAAA,KAAK,EAAEF,KAJT;AAKE,QAAA,WAAW,EAAC,OALd;AAME,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV;AAN9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,EAAE,EAAC,eAHL;AAIE,QAAA,KAAK,EAAER,IAJT;AAKE,QAAA,WAAW,EAAC,MALd;AAME,QAAA,QAAQ,EAAGS,CAAD,IAAOR,UAAU,CAACQ,CAAC,CAACF,MAAF,CAASC,KAAV;AAN7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAwBE;AAAQ,MAAA,OAAO,EAAEN,UAAU,CAACC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmCF,CAhDD;;GAAMN,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n<script src=\"https://www.gstatic.com/firebasejs/8.1.1/firebase-app.js\"></script>; \r\n     var firebaseConfig = {\r\n        apiKey: \"AIzaSyCDkndZZhEEvQuELnFO3iBh8X6sQdbYH7o\",\r\n        authDomain: \"secproject-3e622.firebaseapp.com\",\r\n        databaseURL: \"https://secproject-3e622.firebaseio.com\",\r\n        projectId: \"secproject-3e622\",\r\n        storageBucket: \"secproject-3e622.appspot.com\",\r\n        messagingSenderId: \"575554634707\",\r\n        appId: \"1:575554634707:web:4256d80e8b7beeb468a526\"\r\n      };\r\n      // Initialize Firebase\r\n      firebase.initializeApp(firebaseConfig);\r\n    console.log(\"hey\"); \r\n    const projectstorage = firebase.storage();\r\n    const projectfirebase = firebase.firestore();\r\n\r\nconst Notes = () => {\r\n  const [title, updatetitle] = useState(\"\");\r\n  const [note, updatenote] = useState(\"\");\r\n  \r\n // var ref = projectstorage.ref('notedata');\r\n  function createNote(e) {\r\n    e.preventDefault();\r\n    if (title !== \"\" && note !== \"\")\r\n    projectstorage.ref('notedata').post({\r\n        title: title,\r\n        note: note,\r\n    });\r\n  }\r\n   return (\r\n    <section className=\"noteform\">\r\n      <h3>Create New Note</h3>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"noteform-title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"noteform-title\"\r\n          name=\"noteform-title\"\r\n          value={title}\r\n          placeholder=\"Title\"\r\n          onChange={(e) => updatetitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"noteform-note\">Note</label>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"noteform-note\"\r\n          id=\"noteform-note\"\r\n          value={note}\r\n          placeholder=\"Note\"\r\n          onChange={(b) => updatenote(b.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <button onClick={createNote(e)}>Create Note</button>\r\n\r\n      {/* <input\r\n        id=\"location\"\r\n        value={location}\r\n        placeholder=\"Location\"\r\n        onChange={(e) => updateLocation(e.target.value)}\r\n      /> */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}